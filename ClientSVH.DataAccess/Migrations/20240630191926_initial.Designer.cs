// <auto-generated />
using System;
using ClientSVH.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ClientSVH.DataAccess.Migrations
{
    [DbContext(typeof(PackagesDBContext))]
    [Migration("20240630191926_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ClientSVH.DataAccess.Entity.Document", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("IdSha256")
                        .HasColumnType("text");

                    b.Property<string>("Idmd5")
                        .HasColumnType("text");

                    b.Property<string>("ModeCode")
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Number")
                        .HasColumnType("text");

                    b.Property<int>("Pid")
                        .HasColumnType("integer");

                    b.Property<int>("SizeDoc")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Document");
                });

            modelBuilder.Entity("ClientSVH.DataAccess.Entity.Package", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("StatusId")
                        .HasColumnType("integer");

                    b.Property<string>("UUId")
                        .HasColumnType("text");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Packages");
                });

            modelBuilder.Entity("ClientSVH.DataAccess.Entity.Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("FullName")
                        .HasColumnType("text");

                    b.Property<bool>("MkRes")
                        .HasColumnType("boolean");

                    b.Property<bool>("RunWf")
                        .HasColumnType("boolean");

                    b.Property<int>("newst")
                        .HasColumnType("integer");

                    b.Property<int>("oldst")
                        .HasColumnType("integer");

                    b.Property<int>("pid")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("oldst")
                        .IsUnique();

                    b.ToTable("Status");
                });

            modelBuilder.Entity("ClientSVH.DataAccess.Entity.StatusGraph", b =>
                {
                    b.Property<int>("oldst")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("oldst"));

                    b.Property<int>("StatusId")
                        .HasColumnType("integer");

                    b.Property<string>("maskbit")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("newst")
                        .HasColumnType("integer");

                    b.HasKey("oldst");

                    b.ToTable("StatusGraph");
                });

            modelBuilder.Entity("ClientSVH.DataAccess.Entity.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("ClientSVH.DataAccess.Entity.Document", b =>
                {
                    b.HasOne("ClientSVH.DataAccess.Entity.Package", "Package")
                        .WithMany("Documents")
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Package");
                });

            modelBuilder.Entity("ClientSVH.DataAccess.Entity.Package", b =>
                {
                    b.HasOne("ClientSVH.DataAccess.Entity.Status", "Status")
                        .WithOne("Package")
                        .HasForeignKey("ClientSVH.DataAccess.Entity.Package", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClientSVH.DataAccess.Entity.User", "User")
                        .WithMany("Packages")
                        .HasForeignKey("UserId");

                    b.Navigation("Status");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ClientSVH.DataAccess.Entity.Status", b =>
                {
                    b.HasOne("ClientSVH.DataAccess.Entity.StatusGraph", "StatusGraph")
                        .WithOne("Status")
                        .HasForeignKey("ClientSVH.DataAccess.Entity.Status", "oldst")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StatusGraph");
                });

            modelBuilder.Entity("ClientSVH.DataAccess.Entity.Package", b =>
                {
                    b.Navigation("Documents");
                });

            modelBuilder.Entity("ClientSVH.DataAccess.Entity.Status", b =>
                {
                    b.Navigation("Package");
                });

            modelBuilder.Entity("ClientSVH.DataAccess.Entity.StatusGraph", b =>
                {
                    b.Navigation("Status");
                });

            modelBuilder.Entity("ClientSVH.DataAccess.Entity.User", b =>
                {
                    b.Navigation("Packages");
                });
#pragma warning restore 612, 618
        }
    }
}
